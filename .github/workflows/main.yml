name: Build & Release Luauncher

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: get_version
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

# ---------------------- Linux Build ----------------------
  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    name: Build Linux
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable

      # Install system dependencies
      - name: Update packages
        run: sudo apt-get update
      - name: Install Linux dependencies
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev zip

      # Install Flutter
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "${PWD}/flutter/bin" >> $GITHUB_PATH
          flutter --version

      # Build steps
      - name: Build Flutter Web
        run: |
          echo "::group::Flutter Web Build"
          cd flutter
          flutter build web --release --verbose
          echo "::endgroup::"

      - name: Build Updater
        run: |
          echo "::group::Updater Build"
          cd src-tauri/updater
          cargo build --release --verbose
          cd ../..
          echo "::endgroup::"

      - name: Build Tauri App
        run: |
          echo "::group::Tauri App Build"
          cd src-tauri
          cargo build --release --verbose
          echo "::endgroup::"

      - name: Zip Linux Build with License
        run: |
          cp ../../LICENSE src-tauri/target/release/bundle/
          cd src-tauri/target/release/bundle
          zip -r ../../../../linux.zip *

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ needs.setup.outputs.version }}
          path: linux.zip

# ---------------------- Windows Build ----------------------
  build-windows:
    needs: setup
    runs-on: windows-latest
    name: Build Windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable

      # Install Flutter
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          $env:PATH = "$PWD\flutter\bin;$env:PATH"
          flutter --version

      # Build steps
      - name: Build Flutter Web
        run: |
          echo "::group::Flutter Web Build"
          cd flutter
          flutter build web --release --verbose
          echo "::endgroup::"

      - name: Build Updater
        run: |
          echo "::group::Updater Build"
          cd src-tauri/updater
          cargo build --release --verbose
          cd ../..
          echo "::endgroup::"

      - name: Build Tauri App
        run: |
          echo "::group::Tauri App Build"
          cd src-tauri
          cargo build --release --verbose
          echo "::endgroup::"

      - name: Zip Windows Build with License
        run: |
          if (!(Test-Path "src-tauri\target\release\bundle")) { Write-Error "Bundle folder not found!" }
          copy LICENSE src-tauri\target\release\bundle\
          cd src-tauri\target\release\bundle
          powershell Compress-Archive -Path * -DestinationPath ../../../../windows.zip

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ needs.setup.outputs.version }}
          path: windows.zip

# ---------------------- macOS Build ----------------------
  build-macos:
    needs: setup
    runs-on: macos-latest
    name: Build macOS
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable

      # Install Flutter
      - name: Install Flutter
        run: |
          brew update
          brew install flutter zip

      # Build steps
      - name: Build Flutter Web
        run: |
          echo "::group::Flutter Web Build"
          cd flutter
          flutter build web --release --verbose
          echo "::endgroup::"

      - name: Build Updater
        run: |
          echo "::group::Updater Build"
          cd src-tauri/updater
          cargo build --release --verbose
          cd ../..
          echo "::endgroup::"

      - name: Build Tauri App
        run: |
          echo "::group::Tauri App Build"
          cd src-tauri
          # Ensure Windows-only dependencies are ignored on non-Windows platforms
          cargo build --release --verbose --no-default-features
          echo "::endgroup::"

      - name: Zip macOS Build with License
        run: |
          cp ../../LICENSE src-tauri/target/release/bundle/
          cd src-tauri/target/release/bundle
          zip -r ../../../../macos.zip *

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ needs.setup.outputs.version }}
          path: macos.zip

# ---------------------- Release ----------------------
  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          name: Release ${{ needs.setup.outputs.version }}
          artifacts: |
            release-artifacts/linux-${{ needs.setup.outputs.version }}/linux.zip
            release-artifacts/windows-${{ needs.setup.outputs.version }}/windows.zip
            release-artifacts/macos-${{ needs.setup.outputs.version }}/macos.zip

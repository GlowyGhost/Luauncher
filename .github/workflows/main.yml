name: Build Full App

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  flutter:
    name: Build Flutter Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.2"
          channel: "stable"

      - run: |
          flutter config --no-analytics
          flutter config --no-cli-animations
          cd flutter
          flutter build web --release

      - uses: actions/upload-artifact@v4
        with:
          name: flutter-build
          path: flutter/build/web

  updater:
    name: Build Updater
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build updater
        run: |
          cd src-tauri/updater
          cargo build --release

      - name: Upload updater
        uses: actions/upload-artifact@v4
        with:
          name: updater-${{ matrix.os }}
          path: src-tauri/updater/target/release/*

  app:
    name: Build Tauri App
    runs-on: ${{ matrix.os }}
    needs: [flutter, updater]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Linux dependencies for Tauri
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libglib2.0-dev \
            libwebkit2gtk-4.1-dev \
            zip

      - name: Download Flutter build
        uses: actions/download-artifact@v4
        with:
          name: flutter-build
          path: flutter/build/web

      - name: Download Updater
        uses: actions/download-artifact@v4
        with:
          name: updater-${{ matrix.os }}
          path: src-tauri/updater/target/release

      - name: Install frontend deps if package.json exists
        shell: bash
        run: |
          if [ -f src-tauri/package.json ]; then
            cd src-tauri
            npm install
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Add macOS Rust target
        if: matrix.os == 'macos-latest'
        run: rustup target add x86_64-apple-darwin

      - name: Build Tauri app
        shell: bash
        run: |
          cd src-tauri
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm install -g @tauri-apps/cli
            tauri build
          else
            cargo build --release
          fi

      - name: Package Release Zip (Mac)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          cd src-tauri/target/release/bundle/macos
          zip -ry macos.zip Luauncher.app ../../../../LICENSE

      - name: Package Release Zip (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cd src-tauri/target/release
          zip -j linux.zip Luauncher ../../../LICENSE

      - name: Package Release Zip (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd src-tauri/target/release
          Compress-Archive -Path Luauncher.exe,../../../LICENSE -DestinationPath windows.zip -Force

      - name: Package Release Zip (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd src-tauri/target/release
          Compress-Archive -Path launcher.exe,../../../LICENSE -DestinationPath windows.zip -Force

      - name: Upload final zip
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: src-tauri/target/release/*.zip

name: Build & Release Luauncher

on:
  push:
    tags:
      - 'v*'   # e.g., v1.0.0
  workflow_dispatch: # manual trigger

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: get_version
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

# ---------------------- Linux Build ----------------------
  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    name: Build Linux
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable
      - name: Install Linux dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev zip
      - name: Build Flutter Web
        run: |
          cd flutter
          flutter build web --release
      - name: Build Updater
        run: |
          cd src-tauri/updater
          cargo build --release
          cd ../..
      - name: Build Tauri
        run: |
          cd src-tauri
          cargo build --release
      - name: Zip Linux Build with License
        run: |
          cp ../../LICENSE src-tauri/target/release/bundle/
          cd src-tauri/target/release/bundle
          zip -r ../../../../linux.zip *
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ needs.setup.outputs.version }}
          path: linux.zip

# ---------------------- Windows Build ----------------------
  build-windows:
    needs: setup
    runs-on: windows-latest
    name: Build Windows
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable
      - name: Build Flutter Web
        run: |
          cd flutter
          flutter build web --release
      - name: Build Updater
        run: |
          cd src-tauri/updater
          cargo build --release
          cd ../..
      - name: Build Tauri
        run: |
          cd src-tauri
          cargo build --release
      - name: Zip Windows Build with License
        run: |
          copy LICENSE src-tauri\target\release\bundle\
          cd src-tauri\target\release\bundle
          powershell Compress-Archive -Path * -DestinationPath ../../../../windows.zip
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ needs.setup.outputs.version }}
          path: windows.zip

# ---------------------- macOS Build ----------------------
  build-macos:
    needs: setup
    runs-on: macos-latest
    name: Build macOS
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable
      - name: Install Flutter
        run: |
          brew update
          brew install flutter zip
      - name: Build Flutter Web
        run: |
          cd flutter
          flutter build web --release
      - name: Build Updater
        run: |
          cd src-tauri/updater
          cargo build --release
          cd ../..
      - name: Build Tauri
        run: |
          cd src-tauri
          cargo build --release
      - name: Zip macOS Build with License
        run: |
          cp ../../LICENSE src-tauri/target/release/bundle/
          cd src-tauri/target/release/bundle
          zip -r ../../../../macos.zip *
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ needs.setup.outputs.version }}
          path: macos.zip

# ---------------------- Release ----------------------
  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          name: Release ${{ needs.setup.outputs.version }}
          artifacts: |
            release-artifacts/linux-${{ needs.setup.outputs.version }}/linux.zip
            release-artifacts/windows-${{ needs.setup.outputs.version }}/windows.zip
            release-artifacts/macos-${{ needs.setup.outputs.version }}/macos.zip
